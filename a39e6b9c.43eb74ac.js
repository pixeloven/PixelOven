(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{153:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(10),i=(n(0),n(165)),l={id:"cli-core-lint",title:"CLI Core Lint"},c={id:"api/cli-core-lint",title:"CLI Core Lint",description:"## CLI: PixelOven.Lint",source:"@site/docs/api/cli-core-lint.mdx",permalink:"/docs/api/cli-core-lint",editUrl:"https://github.com/pixeloven/pixeloven/tree/master/docusaurus/docs/docs/api/cli-core-lint.mdx",lastUpdatedBy:"Brian Gebel",lastUpdatedAt:1581098494,sidebar:"docs",previous:{title:"CLI Core Document",permalink:"/docs/api/cli-core-document"},next:{title:"CLI Core Pretty",permalink:"/docs/api/cli-core-pretty"}},o=[{value:"CLI: PixelOven.Lint",id:"cli-pixelovenlint",children:[{value:"Styles",id:"styles",children:[]},{value:"TypeScript",id:"typescript",children:[]}]}],b={rightToc:o};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"cli-pixelovenlint"},"CLI: PixelOven.Lint"),Object(i.b)("p",null,"The Lint API provides a proxy for TsLint as well as StyleLint for handling linting for SCSS, CSS, JavaScript and TypeScript."),Object(i.b)("h3",{id:"styles"},"Styles"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Argument"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"css")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An alias for ",Object(i.b)("inlineCode",{parentName:"td"},"scss"),". Implemented to help differentiate CSS from SCSS.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"scss")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A proxy for the StyleLint linter with a few opinionated defaults for easier setup.")))),Object(i.b)("h4",{id:"options"},"Options"),Object(i.b)("p",null,"For reference on all the available options please review the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://stylelint.io/"}),"official documentation")," for StyleLint. "),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"It is important to note that currently this feature expects a ",Object(i.b)("strong",{parentName:"p"},"stylelint.json")," file to be present at the root of the package to configure the compiler.")),Object(i.b)("h4",{id:"setup"},"Setup"),Object(i.b)("p",null,"First be sure to create a ",Object(i.b)("strong",{parentName:"p"},"stylelint.json")," file at the root of the project or in other words adjacent to the ",Object(i.b)("strong",{parentName:"p"},"package.json"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "extends": "stylelint-config-recommended-scss"\n}\n\n')),Object(i.b)("p",null,"PixelOven by default provides ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/kristerkari/stylelint-config-recommended-scss"}),"stylelint-config-recommended-scss")," as a dependency and highly recommends using this as a starting point for all SCSS based projects."),Object(i.b)("h4",{id:"usage"},"Usage"),Object(i.b)("p",null,"Once this has been confirmed all we have to do is run the following."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn run pixeloven lint scss\n")),Object(i.b)("p",null,"We can also target specific files."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn run pixeloven lint scss ./src/index.scss\n")),Object(i.b)("p",null,"StyleLint options can be passed through the CLI but it is highly recommended that this behavior be managed with in a ",Object(i.b)("strong",{parentName:"p"},"stylelint.json")," file."),Object(i.b)("h3",{id:"typescript"},"TypeScript"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"It is important to note that currently this feature expects a ",Object(i.b)("strong",{parentName:"p"},"tslint.json")," file to be present at the root of the package to configure the compiler.")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Argument"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"ts")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A proxy for the TSLint linter with a few opinionated defaults for easier setup.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"tsx")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An alias for ",Object(i.b)("inlineCode",{parentName:"td"},"ts"),". Implemented to help differentiate JSX based projects.")))),Object(i.b)("h4",{id:"options-1"},"Options"),Object(i.b)("p",null,"For reference on all the available options please review the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://palantir.github.io/tslint/"}),"official documentation")," for TSLint. "),Object(i.b)("h4",{id:"setup-1"},"Setup"),Object(i.b)("p",null,"First be sure to create a ",Object(i.b)("strong",{parentName:"p"},"tslint.json")," file at the root of the project or in other words adjacent to the ",Object(i.b)("strong",{parentName:"p"},"package.json"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "defaultSeverity": "error",\n  "extends": [\n    "tslint:latest",\n    "tslint-config-prettier",\n    "tslint-eslint-rules"\n  ]\n}\n')),Object(i.b)("p",null,"PixelOven by default provides ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/prettier/tslint-config-prettier"}),"tslint-config-prettier")," for compatibility between TSLint and Prettier as well as ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/buzinas/tslint-eslint-rules"}),"tslint-eslint-rules")," to match rules against ESLint."),Object(i.b)("h4",{id:"usage-1"},"Usage"),Object(i.b)("p",null,"Once this has been confirmed all we have to do is run the following."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn run pixeloven lint ts\n")),Object(i.b)("p",null,"We can also target specific files."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn run pixeloven lint ts ./src/index.ts\n")),Object(i.b)("p",null,"TSLint options can be passed through the CLI but it is highly recommended that this behavior be managed with in a ",Object(i.b)("strong",{parentName:"p"},"tslint.json")," file."))}p.isMDXComponent=!0},165:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,O=s["".concat(l,".").concat(d)]||s[d]||u[d]||i;return n?r.a.createElement(O,c({ref:t},b,{components:n})):r.a.createElement(O,c({ref:t},b))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var b=2;b<i;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);