(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{165:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(10),i=(n(0),n(175)),c={id:"file-system-and-structure",title:"File System and Structure"},o={id:"contribution/file-system-and-structure",title:"File System and Structure",description:"General overview of PixelOven's file structure and recommended application structure for projects using our CLI.",source:"@site/docs/contribution/file-system-and-structure.mdx",permalink:"/docs/contribution/file-system-and-structure",editUrl:"https://github.com/pixeloven/pixeloven/tree/master/docusaurus/docs/docs/contribution/file-system-and-structure.mdx",lastUpdatedBy:"Brian Gebel",lastUpdatedAt:1581393588,sidebar:"docs",previous:{title:"Quick Start Guide",permalink:"/docs/contribution/quick-start-guide"},next:{title:"Code of Conduct",permalink:"/docs/contribution/code-of-conduct"}},l=[{value:"File structure",id:"file-structure",children:[{value:"PixelOven Root structure",id:"pixeloven-root-structure",children:[]},{value:"PixelOven App structure",id:"pixeloven-app-structure",children:[]},{value:"PixelOven Package structure",id:"pixeloven-package-structure",children:[]},{value:"File extensions",id:"file-extensions",children:[]},{value:"File designations",id:"file-designations",children:[]}]}],b={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"General overview of PixelOven's file structure and recommended application structure for projects using our CLI."),Object(i.b)("h2",{id:"file-structure"},"File structure"),Object(i.b)("p",null,"The structure of this application should be considered living. As new requirements are needed this structure should be able to adapt to change. With that said there was a fair attempt to plan for the future. Below is a quick break down of this structure."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"./\n\u251c\u2500\u2500 .github/\n\u251c\u2500\u2500 apps/\n\u2502   \u251c\u2500\u2500 examples/\n\u2502   \u2514\u2500\u2500 pixeloven/\n\u251c\u2500\u2500 docker/\n\u251c\u2500\u2500 docusaurus/\n\u251c\u2500\u2500 node_modules/\n\u251c\u2500\u2500 packages/\n\u2502   \u251c\u2500\u2500 examples/\n\u2502   \u251c\u2500\u2500 pixeloven/\n\u2502   \u251c\u2500\u2500 pixeloven-core/\n\u2502   \u251c\u2500\u2500 pixeloven-express/\n\u2502   \u251c\u2500\u2500 pixeloven-react/\n\u2502   \u251c\u2500\u2500 pixeloven-storybook/\n\u2502   \u2514\u2500\u2500 pixeloven-webpack/\n\u2514\u2500\u2500 scripts/\n...\n")),Object(i.b)("h3",{id:"pixeloven-root-structure"},"PixelOven Root structure"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Directory"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},".github")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GitHub configuration")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"apps")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for all applications including examples.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"docker")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Docker setup files for custom images")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"docusaurus")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"General documentation for PixelOven and recommended best practices for using our CLI")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"node_modules")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"I would hope this is understood ;) but this is also a transient directory used to store our general dependencies.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"packages")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for all packages including examples.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"scripts")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Scripts used to help onboarding as well as our build process.")))),Object(i.b)("h3",{id:"pixeloven-app-structure"},"PixelOven App structure"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Directory"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"examples")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for example applications to help with onboarding and testing.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for PixelOven sites and apps.")))),Object(i.b)("h3",{id:"pixeloven-package-structure"},"PixelOven Package structure"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Directory"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"examples")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for example packages to help with onboarding, testing and abstracting common example logic.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for core CLI implementation.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven-core")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for core logic common to any project")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven-express")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace express abstractions to help support server based applications including our own dev server.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven-react")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace react abstractions for common react development")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven-storybook")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for storybook CLI logic")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"pixeloven-webpack")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Workspace for webpack CLI logic")))),Object(i.b)("h3",{id:"file-extensions"},"File extensions"),Object(i.b)("p",null,"It should be noted that we use both ",Object(i.b)("inlineCode",{parentName:"p"},".ts")," and ",Object(i.b)("inlineCode",{parentName:"p"},".tsx"),". The general rule is any file that has ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"JSX"))," should use the ",Object(i.b)("inlineCode",{parentName:"p"},".tsx")," extension. Everything else should be ",Object(i.b)("inlineCode",{parentName:"p"},".ts"),". The ",Object(i.b)("inlineCode",{parentName:"p"},".js")," and ",Object(i.b)("inlineCode",{parentName:"p"},".jsx")," extensions are not supported as this is a pure TypeScript environment."),Object(i.b)("h3",{id:"file-designations"},"File designations"),Object(i.b)("p",null,"Beyond just the above extensions we have a few other designations. First we have ",Object(i.b)("inlineCode",{parentName:"p"},".stories.tsx")," which allow us to render out components in isolation. Second we have ",Object(i.b)("inlineCode",{parentName:"p"},".test.tsx")," which are part of our unit testing environment. Both of these designations are matched by pattern and should be present for ",Object(i.b)("strong",{parentName:"p"},"all")," components."))}p.isMDXComponent=!0},175:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,O=s["".concat(c,".").concat(d)]||s[d]||u[d]||i;return n?r.a.createElement(O,o(o({ref:t},b),{},{components:n})):r.a.createElement(O,o({ref:t},b))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var b=2;b<i;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);